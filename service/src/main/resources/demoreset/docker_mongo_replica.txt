UUID: ac092f96-10f7-4cc4-83c9-adb8291d64ce
Title: docker mongo replica
Type: Database
Date of creation: 2025-02-04T17:10:00.056258
Date of modification: 
Tags: [docker, mongo, setup]

Content: 

<p>1. stworzenie cluster network (ten krok jest jednorazowy, nie trzeba go wykonywać za każdym razem)</p><p></p><p>docker network create &lt;nazwa&gt;</p><p></p><p>2. stworzenie kontenera </p><p></p><p>a) bezpośrednie, podanie konkretnych flag na samym początku</p><p>docker run --net &lt;nazwa networka&gt; --publish 27017:27017 --volume /tmp:/data/db --name &lt;nowa nazwa&gt; --detach mongo mongod --replSet mongodb-replicaset --port 27017</p><p>docker run --net &lt;test&gt; --publish 27017:27017 --volume /tmp:/data/db --name &lt;ela&gt; --detach mongo mongod --replSet mongodb-replicaset --port 27017</p><p></p><p>Przykład:</p><p>docker run --net test --publish 27017:27017 -v v1:/data/db --name lazy --detach mongo mongod --replSet mongodb-replicaset</p><p>docker run --net test --publish 27017:27017 -v v3:/data/db --name ela --detach mongo mongod --replSet mongodb-replicaset</p><p>docker run  --publish 5000:5000 -p 50000:50000 -v v1:/data/db --name lazy --detach mongo mongod --replSet mongodb-replicaset</p><p>docker run  --net test --publish 5000:5000 -p 50000:50000 -v v1:/data/db --name lazy --detach mongo mongod --replSet mongodb-replicaset</p><p></p><p></p><p>b) pośrednie:</p><p>- stworzenie kontenera z flagami, ale bez wolumenu</p><p>docker run --net &lt;nazwa networka&gt; --publish 27017:27017  --name &lt;nowa nazwa&gt; --detach mongo mongod --replSet mongodb-replicaset --port 27017</p><p></p><p>Przykład:</p><p>docker run --net test --publish 27017:27017  --name grat --detach mongo mongod --replSet mongodb-replicaset --port 27017</p><p></p><p></p><p>- stworzenie image&#39;a na bazie konkretnego kontenera (źródło: https://stackoverflow.com/a/33956387)</p><p>docker commit &lt;id kontenera&gt; &lt;nazwa nowego image&#39;a&gt;</p><p></p><p>-stworzenie nowego kontenera według nowego image&#39;a wraz z wolumenem</p><p>docker run -ti -v &quot;$PWD/somedir&quot;:/somedir newimagename /bin/bash</p><p></p><p>- ustawienie access portów (bez tego nie wejdziemy do mogo basha, bo nie wystawimy kontenera; można to zrobić przez desktopowe GUI)</p><p></p><p>3. połączenie się z bashem mongo</p><p>docker exec -it &lt;nazwa kontenera&gt; mongo</p><p></p><p>- w bashu możliwe, że trzeba będzie stworzyć nową bazę, ale nie jestem pewny czy to jest potrzebne</p><p></p><p>- stworzenie bazy w bashu</p><p>use &lt;nazwa nowej bazy&gt;</p><p></p><p>4. stworzenie repliki w bazie </p><p>db = (new Mongo(&#39;&lt;ip kontenera&gt;:&lt;port&gt;&#39;)).getDB(&#39;&lt;nazwa bazy/folderu&gt;&#39;); config={&quot;_id&quot;:&quot;mongodb-replicaset&quot;,&quot;members&quot;:[{&quot;_id&quot;:0,&quot;host&quot;:&quot;&lt;ip kontenera&gt;:&lt;port&gt;&quot;}]}; rs.initiate(config);</p><p></p><p>Przykład:</p><p>db = (new Mongo(&#39;192.168.99.100:27017&#39;)).getDB(&#39;patents&#39;); </p><p>config={&quot;_id&quot;:&quot;mongodb-replicaset&quot;,&quot;members&quot;:[{&quot;_id&quot;:0,&quot;host&quot;:&quot;192.168.99.100:27017&quot;}]}; </p><p>rs.initiate(config);</p><p></p><p>db = (new Mongo(&#39;192.168.99.100:27017&#39;)).getDB(&#39;ela&#39;); </p><p>config={&quot;_id&quot;:&quot;mongodb-replicaset&quot;,&quot;members&quot;:[{&quot;_id&quot;:0,&quot;host&quot;:&quot;192.168.99.100:27017&quot;}]}; </p><p>rs.initiate(config);</p><p></p><p>db = (new Mongo(&#39;192.168.99.100:27017&#39;)).getDB(&#39;patents&#39;); config={&quot;_id&quot;:&quot;mongodb-replicaset&quot;,&quot;members&quot;:[{&quot;_id&quot;:0,&quot;host&quot;:&quot;192.168.99.100:27016&quot;}]}; rs.initiate(config);</p><p>db = (new Mongo(&#39;192.168.99.100:27017&#39;)).getDB(&#39;patents&#39;); config={&quot;_id&quot;:&quot;mongodb-replicaset&quot;,&quot;members&quot;:[{&quot;_id&quot;:0,&quot;host&quot;:&quot;192.168.99.100:27017&quot;}]}; rs.initiate(config);</p><p></p><p></p><p>Prawidłowy response powinien wyglądać tak:</p><p></p><p>{</p><p>        &quot;ok&quot; : 1,</p><p>        &quot;$clusterTime&quot; : {</p><p>                &quot;clusterTime&quot; : Timestamp(1657284164, 2),</p><p>                &quot;signature&quot; : {</p><p>                        &quot;hash&quot; : BinData(0,&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;),</p><p>                        &quot;keyId&quot; : NumberLong(0)</p><p>                }</p><p>        },</p><p>        &quot;operationTime&quot; : Timestamp(1657284164, 1)</p><p>}</p>

